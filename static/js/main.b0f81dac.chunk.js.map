{"version":3,"sources":["components/results/Results.js","components/input/Input.js","components/comparassion/Comparassion.js","components/App.js","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_results_css__WEBPACK_IMPORTED_MODULE_1__","_results_css__WEBPACK_IMPORTED_MODULE_1___default","Results","props","result","co","eval","fi","se","e","a","createElement","toString","Input","_this","this","react_default","Fragment","type","onChange","getValue","target","value","React","Component","Comparassion","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getValueFromFirstInput","data","setState","getValueFromComparassion","getValueFromSecondInput","state","className","input_Input","bind","comparassion_Comparassion","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uIAAA,IAAAA,mCAAAC,oBAAA,GAAAC,2CAAAD,oBAAAE,EAAAH,oCAAAI,0CAAAH,oBAAA,IAAAI,kDAAAJ,oBAAAE,EAAAC,2CAGME,QAAU,SAAVA,QAAWC,OAChB,IAAMC,OAAS,SAATA,OAAUD,OACf,IACC,OAAOA,MAAME,IACZ,IAAK,KACJ,OAAOC,KAAKA,KAAKH,MAAMI,IAAMD,KAAKH,MAAMK,KACzC,IAAK,KACJ,OAAOF,KAAKA,KAAKH,MAAMI,IAAMD,KAAKH,MAAMK,KACzC,IAAK,OACJ,OAAOF,KAAKA,KAAKH,MAAMI,KAAOD,KAAKH,MAAMK,KAC1C,IAAK,OACJ,OAAOF,KAAKA,KAAKH,MAAMI,KAAOD,KAAKH,MAAMK,KAC1C,IAAK,IACJ,OAAOF,KAAKA,KAAKH,MAAMI,KAAOD,KAAKH,MAAMK,KAC1C,IAAK,KACJ,OAAOF,KAAKH,MAAMI,MAAQD,KAAKH,MAAMK,IACtC,IAAK,IACJ,OAAOF,KAAKA,KAAKH,MAAMI,KAAOD,KAAKH,MAAMK,KAC1C,IAAK,KACJ,OAAOF,KAAKA,KAAKH,MAAMI,MAAQD,KAAKH,MAAMK,KAC3C,QACC,MAAO,IAER,MAAMC,GACP,MAAO,KAIT,OACCX,2CAAAY,EAAAC,cAAA,WACCb,2CAAAY,EAAAC,cAAA,UAAKP,OAAOD,OAAOS,cAKPV,wPCzBAW,0LATL,IAAAC,EAAAC,KACR,OACCC,EAAAN,EAAAC,cAAAK,EAAAN,EAAAO,SAAA,KACCD,EAAAN,EAAAC,cAAA,SAAOO,KAAK,OAAOC,SAAU,SAACV,GAAD,OAAOK,EAAKX,MAAMiB,SAASX,EAAEY,OAAOC,kBAJjDC,IAAMC,mBCiBXC,0LAhBL,IAAAX,EAAAC,KACR,OACCC,EAAAN,EAAAC,cAAA,UAAQQ,SAAU,SAACV,GAAD,OAAOK,EAAKX,MAAMiB,SAASX,EAAEY,OAAOC,SACrDN,EAAAN,EAAAC,cAAA,UAAQW,MAAM,MAAd,KACAN,EAAAN,EAAAC,cAAA,UAAQW,MAAM,MAAd,KACAN,EAAAN,EAAAC,cAAA,UAAQW,MAAM,QAAd,MACAN,EAAAN,EAAAC,cAAA,UAAQW,MAAM,QAAd,MACAN,EAAAN,EAAAC,cAAA,UAAQW,MAAM,KAAd,MACAN,EAAAN,EAAAC,cAAA,UAAQW,MAAM,MAAd,OACAN,EAAAN,EAAAC,cAAA,UAAQW,MAAM,KAAd,MACAN,EAAAN,EAAAC,cAAA,UAAQW,MAAM,MAAd,eAXuBC,IAAMC,YCuClBE,qBAnCb,SAAAA,EAAYvB,GAAO,IAAAW,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAZ,KAAAW,IACjBZ,EAAAa,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAhB,KAAMZ,KAQR6B,uBAAyB,SAACC,GACxBnB,EAAKoB,SAAS,CAAC3B,GAAI0B,KAVFnB,EAanBqB,yBAA2B,SAACF,GAC1BnB,EAAKoB,SAAS,CAAC7B,GAAI4B,KAdFnB,EAiBnBsB,wBAA0B,SAACH,GACzBnB,EAAKoB,SAAS,CAAC1B,GAAIyB,KAhBnBnB,EAAKuB,MAAQ,CACX9B,GAAI,GACJF,GAAI,KACJG,GAAI,IALWM,wEAsBjB,OACEE,EAAAN,EAAAC,cAAA,OAAK2B,UAAU,QACbtB,EAAAN,EAAAC,cAAA,4BACAK,EAAAN,EAAAC,cAAA,wIACAK,EAAAN,EAAAC,cAAC4B,EAAD,CAAOD,UAAU,aAAalB,SAAUL,KAAKiB,uBAAuBQ,KAAKzB,QACzEC,EAAAN,EAAAC,cAAC8B,EAAD,CAAcH,UAAU,eAAelB,SAAUL,KAAKoB,yBAAyBK,KAAKzB,QACpFC,EAAAN,EAAAC,cAAC4B,EAAD,CAAOD,UAAU,cAAclB,SAAUL,KAAKqB,wBAAwBI,KAAKzB,QAC3EC,EAAAN,EAAAC,cAACT,EAAA,EAAD,CAASoC,UAAU,UAAU/B,GAAIQ,KAAKsB,MAAM9B,GAAIF,GAAIU,KAAKsB,MAAMhC,GAAIG,GAAIO,KAAKsB,MAAM7B,aA9BxEe,IAAMC,YCMJkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOhC,EAAAN,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b0f81dac.chunk.js","sourcesContent":["import React from 'react';\r\nimport './results.css';\r\n\r\nconst Results = (props) => {\r\n\tconst result = (props) => {\r\n\t\ttry {\r\n\t\t\tswitch(props.co) {\r\n\t\t\t\tcase 'lt':\r\n\t\t\t\t\treturn eval(eval(props.fi) < eval(props.se))\r\n\t\t\t\tcase 'gt':\r\n\t\t\t\t\treturn eval(eval(props.fi) > eval(props.se))\r\n\t\t\t\tcase 'loet':\r\n\t\t\t\t\treturn eval(eval(props.fi) <= eval(props.se))\r\n\t\t\t\tcase 'goet':\r\n\t\t\t\t\treturn eval(eval(props.fi) >= eval(props.se))\r\n\t\t\t\tcase 'e': //eslint-disable-next-line\r\n\t\t\t\t\treturn eval(eval(props.fi) == eval(props.se))\r\n\t\t\t\tcase 'se':\r\n\t\t\t\t\treturn eval(props.fi) === eval(props.se)\r\n\t\t\t\tcase 'i': //eslint-disable-next-line\r\n\t\t\t\t\treturn eval(eval(props.fi) != eval(props.se))\r\n\t\t\t\tcase 'si':\r\n\t\t\t\t\treturn eval(eval(props.fi) !== eval(props.se))\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn '' \r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\treturn ''; // prevents app from crashing, god bless this line\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>{result(props).toString()}</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Results","import React from 'react'\r\nimport './input.css'\r\n\r\nclass Input extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<input type='text' onChange={(e) => this.props.getValue(e.target.value)} />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport './comparassion.css'\r\n\r\nclass Comparassion extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<select onChange={(e) => this.props.getValue(e.target.value)}>\r\n\t\t\t\t<option value='lt'>&lt;</option>\r\n\t\t\t\t<option value='gt'>&gt;</option>\r\n\t\t\t\t<option value='loet'>&lt;=</option>\r\n\t\t\t\t<option value='goet'>&gt;=</option>\r\n\t\t\t\t<option value='e'>==</option>\r\n\t\t\t\t<option value='se'>===</option>\r\n\t\t\t\t<option value='i'>!=</option>\r\n\t\t\t\t<option value='si'>!==</option>\r\n\t\t\t</select>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Comparassion","import React from 'react'\nimport Input from './input/Input'\nimport Results from './results/Results'\nimport Comparassion from './comparassion/Comparassion'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fi: '', // first input\n      co: 'lt', // comparassion\n      se: ''  // second input\n    }\n  }\n\n  getValueFromFirstInput = (data) => {\n    this.setState({fi: data})\n  }\n\n  getValueFromComparassion = (data) => {\n    this.setState({co: data})\n  }\n\n  getValueFromSecondInput = (data) => {\n    this.setState({se: data})\n  }\n\n  render() {\n    return (\n      <div className='root'>\n        <h2>true or false?</h2>\n        <p>NOTE - those inputs are treated as JavaScript expressions. If you want to compare strings, make sure to use quotation marks</p>\n        <Input className='firstInput' getValue={this.getValueFromFirstInput.bind(this)} />\n        <Comparassion className='comparassion' getValue={this.getValueFromComparassion.bind(this)} />\n        <Input className='secondInput' getValue={this.getValueFromSecondInput.bind(this)} />\n        <Results className='results' fi={this.state.fi} co={this.state.co} se={this.state.se} />\n      </div>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}